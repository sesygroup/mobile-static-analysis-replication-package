UID;Paper ID;Title;Year.of.publication;Publication.venue.name;Publication.venue.type;Analysis.goal;Macro.analysis.goal;Paper.goal;Focus;Usage;Evaluation;Platform specific;Implementation;Static/Hybrid approach;Machine Learning;App artifact;Additional input;Analysis pre-steps;Analysis type;Stakeholder;Tool availability;# apps evaluated;Toy/Real apps;Evaluation soundness;Industry involvement
1;59S;NeSeDroid-Android Malware Detection Based on Network Traffic and Sensitive Resource Accessing;2017;ICDECT;Conference;MALWARE;E;Q;1;0;0;A;A;H;1;APK;Methods of interest;1;FLOW ANALYSIS;D;0;H;R;P;M
2;61S;Analyzing Remote Server Locations for Personal Data Transfers in Mobile Apps;2017;PETS;Conference;PRIVACY;E;Q;1;0;0;G;A;H;0;APK;-;0;SLICING;A;0;L;R;Y;A
3;65S;MaMaDroid: Detecting Android Malware by Building Markov Chains of Behavioral Models;2017;NDSS;Conference;MALWARE;E;Q;1;0;0;A;A;S;1;APK;-;0;MODEL BASED;A;1;L;R;Y;A
4;100S;Ripple: Reflection Analysis for Android Apps in Incomplete Information Environments;2017;CODASPY;Conference;REFLECTION;M;I;1;0;0;A;A;S;0;APK;-;0;STRING ANALYSIS, TYPE INFERENCE, POINTS-TO ANALYSIS, FLOW ANALYSIS;D;1;H;R;Y;A
5;27S;AndroDialysis: Analysis of Android Intent Effectiveness in Malware Detection;2017;Computers & Security;Journal;MALWARE;E;Q;1;0;0;A;A;S;1;APK;-;0;FLOW ANALYSIS, DATA MINING, CLASSIFICATION;A;0;L;R;Y;A
6;44S;Profiling the responsiveness of Android applications via automated resource amplification;2016;MOBILESoft;Conference;PERFORMANCE;E;Q;1;0;0;A;A;H;0;SOURCE CODE;Methods of interest;0;FLOW ANALYSIS;D;0;H;R;P;A
7;45S;Detecting Invalid Layer Combinations Using Control-Flow Analysis for Android;2016;ECOOP;Workshop;TESTING;I;I;1;0;0;G;A;S;0;SOURCE CODE;Policies, rules & constraints;0;FLOW ANALYSIS;D;0;H;R;N;A
8;46S;Graph-aided directed testing of Android applications for checking runtime privacy behaviours;2016;AST;Workshop;TESTING;I;I;1;0;0;A;A;H;0;APK;-;0;FLOW ANALYSIS;D;0;H;R;P;A
9;48S;Dexteroid: Detecting malicious behaviors in Android apps using reverse-engineered life cycle models;2016;Computers & Security;Journal;MALWARE;E;Q;1;0;0;A;A;S;0;APK;-;0;MODEL BASED;A;0;H;R;Y;A
10;51S;IacDroid: Preventing Inter-App Communication capability leaks in Android;2016;ISCC;Conference;PRIVACY, INTER-COMPONENT COMMUNICATION;E, M;Q;1;0;0;A;A;H;0;APK;-;0;FLOW ANALYSIS;D;0;L;R;P;M
11;56S;Practical, formal synthesis and automatic enforcement of security policies for android;2016;DSN;Conference;PRIVACY;E;Q;1;0;0;A;A;S;1;APK;-;0;FLOW ANALYSIS, MODEL BASED;U;0;M;T;P;A
12;57S;CapaDroid: Detecting Capability Leak for Android Applications;2016;SpaCCS;Workshop;INTER-APP COMMUNICATION, PRIVACY;E, M;Q;1;0;0;A;A;H;0;APK;-;1;MODEL BASED, SYMBOLIC EXECUTION;A;0;H;T, R;P;A
13;58S;Asynchrony-aware static analysis of Android applications;2016;MEMOCODE;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS, TYPESTATE ANALYSIS;D, A;1;L;T;Y;A
14;60S;Identifying Android inter app communication vulnerabilities using static and dynamic analysis;2016;MOBILESoft;Conference;INTER-APP COMMUNICATION, PRIVACY;E, M;Q;1;0;0;A;A;H;0;APK;-;0;TAINT ANALYSIS, FLOW ANALYSIS;D;1;M;T, R;P;A
15;63S;Towards Automatically Generating Privacy Policy for Android Apps;2016;IFS;Journal;PRIVACY;E;Q;1;0;0;A;A;S;1;APK;Platform description;1;FLOW ANALYSIS;D;0;L;T;P;A
16;64S;Revisiting the Description-to-Behavior Fidelity in Android Applications;2016;SANER;Conference;PRIVACY;E;Q;1;0;0;A;A;S;1;APK;Policies, rules & constraints, App Store Descriptions;1;DATA MINING, CLASSIFICATION;D, A;0;H;T, R;Y;A
17;70S;Triggerscope: Towards detecting logic bombs in android applications;2016;S&P;Conference;MALWARE;E;Q;1;0;0;A;A;S;0;APK;-;1;SYMBOLIC EXECUTION, FLOW ANALYSIS;A;0;H;T, R;Y;A
18;75S;Automated test generation for detection of leaks in Android applications;2016;AST;Workshop;TESTING;I;Q;1;0;0;A;A;S;0;SOURCE CODE;-;0;FLOW ANALYSIS;D, A;1;L;R;N;A
19;76S;Automatic Construction of Callback Model for Android Application;2016;ICECCS;Conference;INTER-COMPONENT COMMUNICATION;M;I;1;0;0;A;A;S;0;SOURCE CODE;-;0;FLOW ANALYSIS;D, R;0;H;R;N;A
20;27;Automated energy optimization of HTTP requests for mobile applications;2016;ICSE;Conference;ENERGY;E;Q;1;0;0;G;A;S;0;APK;-;0;FLOW ANALYSIS;D;1;H;R;Y;A
21;28;Understanding and detecting wake lock misuses for Android applications;2016;FSE;Conference;ENERGY;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D;0;L;R;Y;A
22;29;Taming Android fragmentation: characterizing and detecting compatibility issues for Android apps;2016;ASE;Conference;TESTING, PERFORMANCE;E, I;I;1;0;0;A;A;S;0;APK;Source code mappings;1;SLICING;D;1;H;R;Y;A
23;31;Reflection-aware static analysis of Android apps;2016;ASE;Conference;REFLECTION;M;I;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS, CONSTANT PROPAGATION;D;0;H;R;N;A
24;33;Automated testing and notification of mobile app privacy leak-cause behaviours;2016;ASE;Conference;PRIVACY, TESTING;E, I;I;1;0;0;A;A;H;0;APK;-;0;FLOW ANALYSIS;D;1;L;T;N;A
25;34;Finding resume and restart errors in Android applications;2016;OOPSLA;Conference;TESTING;I;I;1;0;0;A;A;H;0;APK;-;0;FLOW ANALYSIS;D;0;M;R;Y;A
26;35;DroidRA: Taming Reflection to Support Whole-ProgramAnalysis of Android Apps;2016;ISSTA;Conference;REFLECTION;M;I;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS, CONSTANT PROPAGATION;D;1;L;R;N;A
27;36;Empirical assessment of machine learning-based malware detectors for Android;2016;ESEJ;Journal;MALWARE;E;Q;0;1;0;A;A;S;1;APK;-;0;DATA MINING, CLASSIFICATION;A;0;M;R;Y;A
28;37;Effective detection of android malware based on the usage of data flow APIs and machine learning;2016;IST;Journal;MALWARE;E;Q;1;0;0;A;A;S;1;APK;-;0;FLOW ANALYSIS;A;0;H;R;Y;A
29;101S;On the Static Analysis of Hybrid Mobile Apps - A Report on the State of Apache Cordova Nation;2016;ESSoS;Journal;FRAMEWORK;M;I;1;0;0;G;A;S;0;APK;-;0;FLOW ANALYSIS;D;0;L;R;Y;A
30;110S;Towards a Generic Framework for Automating ExtensiveAnalysis of Android Applications;2016;SAC;Conference;FRAMEWORK;M;I;1;0;0;A;A;S;0;APK;-;0;CODE INSTRUMENTATION;R;0;H;R;Y;A
31;5S;Static Program Analysis for Identifying Energy Bugs in Graphics-Intensive Mobile Apps;2016;MASCOTS;Conference;ENERGY, REFACTORING;E, I;Q;1;0;0;A;A;H;0;SOURCE CODE;-;0;FLOW ANALYSIS;D;0;L;R;Y;A
32;15S;Combining static analysis with probabilistic models to enable market-scale android inter-component analysis;2016;POPL;Journal;INTER-APP COMMUNICATION, INTER-COMPONENT COMMUNICATION;M;I;1;0;0;A;A;S;1;APK;-;1;FLOW ANALYSIS;A;0;H;R;Y;M
33;17S;DroidNative: automating and optimizing detection of android native code malware variants;2016;COMPUTERS & SECURITY;Journal;MALWARE;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS, CLASSIFICATION;A;1;H;R;Y;A
34;18S;Enabling Automatic Protocol Behavior Analysis for Android Applications;2016;CoNEXT;Conference;INTER-APP COMMUNICATION;M;I;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS, SLICING;A;0;H;R;Y;A
35;19S;PERUIM: Understanding Mobile Application Privacy with permission-UI Mapping;2016;UbiComp;Conference;PRIVACY;E;Q;1;0;0;A;A;H;0;APK;-;0;TAINT ANALYSIS, MODEL BASED;U;0;H;T, R;N;A
36;24S;HybriDroid: Static Analysis Framework for Android Hybrid Applications;2016;ASE;Conference;FRAMEWORK;M;I;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS;R;0;L;R;P;M
37;25S;StubDroid: automatic inference of precise data-flow summaries for the android framework;2016;ICSE;Conference;FRAMEWORK;M;Q;1;0;0;A;A;S;0;APK, SOURCE CODE;-;0;TAINT ANALYSIS;A;0;L;T;P;M
38;26S;FlowMine: Android app analysis via data flow;2016;CCNC;Conference;MALWARE;E;Q;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS;A;0;M;R;N;A
39;29S;Debugging energy-efficiency related field failures in mobile apps;2016;MOBILESoft;Conference;ENERGY;E;Q;1;0;0;A;A;S;0;APK;-;0;PATTERN-BASED CONTEXTUAL ANALYSIS;D, U;0;H;R;P;A
40;32S;State-Taint Analysis for Detecting Resource Bugs;2016;TASE;Conference;TESTING, RESOURCE, ENERGY;E, I;Q;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS;D;1;H;R;N;A
41;33S;Fixing Resource Leaks in Android Apps with Light-Weight Static Analysis and Low-Overhead Instrumentation;2016;ISSRE;Conference;RESOURCE;I;Q;1;0;0;A;A;H;0;APK;-;1;FLOW ANALYSIS;D;0;L;T;N;A
42;34S;Relda2: an effective static analysis tool for resource leak detection in Android apps;2016;ASE;Conference;RESOURCE;I;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D;0;H;R;N;A
43;35S;Detecting energy leaks in android app with poem;2016;PerCom;Workshop;ENERGY;E;Q;1;0;0;A;A;H;0;APK;-;0;FLOW ANALYSIS;D;0;L;R;N;A
44;36S;Lightweight measurement and estimation of mobile ad energy consumption;2016;GREENS;Workshop;ENERGY;E;Q;1;0;0;A;A;H;0;APK;-;0;DATA MINING, STATISTICAL ANALYSIS;D;0;M;T, R;P;A
45;13;AppContext: Differentiating Malicious and Benign Mobile App Behaviors Using Context;2015;ICSE;Conference;MALWARE;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D;0;L;R;Y;A
46;14;Mining Apps for Abnormal Usage of Sensitive Data;2015;ICSE;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D;1;H;R;P;M
47;15;CLAPP: characterizing loops in Android applications;2015;ESEC/FSE;Conference;PERFORMANCE;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D;0;L;T;N;A
48;16;Study and Refactoring of Android Asynchronous Programming;2015;ASE;Conference;PERFORMANCE, REFACTORING;E, I;Q;1;0;0;A;A;S;0;SOURCE CODE;-;0;FLOW ANALYSIS;D;0;M;R;P;A
49;17;Tracking the Software Quality of Android Applications Along Their Evolution;2015;ASE;Conference;ANTIPATTERNS;I;Q;0;1;0;A;A;S;0;APK;App Store Descriptions;1;MODEL BASED;D;0;M;R;P;A
50;18;Covert Communication in Mobile Applications;2015;ASE;Conference;INTER-APP COMMUNICATION, INTER-COMPONENT COMMUNICATION;M;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D, A;0;M;R;P;M
51;19;Static Window Transition Graphs for Android;2015;ASE;Conference;INTER-APP COMMUNICATION;M;I;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D;0;H;R;N;M
52;20;Static Analysis of Implicit Control Flow: Resolving Java Reflection and Android Intents;2015;ASE;Conference;INTER-APP COMMUNICATION, INTER-COMPONENT COMMUNICATION;M;I;1;0;0;A;A;S;0;SOURCE CODE;-;0;FLOW ANALYSIS;D;0;L;R;P;A
53;21;String Analysis of Android Applications;2015;ASE;Conference;INTER-COMPONENT COMMUNICATION, REFLECTION, MALWARE;M, E;Q;1;0;0;G;A;S;0;APK;Source code mappings;1;FLOW ANALYSIS, ABSTRACT INTERPRETATION;D, A;0;L;T;N;A
54;22;Interactively verifying absence of explicit information flows in Android apps;2015;SPLASH/OOPSLA;Conference;MALWARE;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;A;0;M;R;N;A
55;23;ShamDroid: gracefully degrading functionality in the presence of limited resource access;2015;SPLASH/OOPSLA;Conference;REFACTORING, RESOURCE;I;Q;1;0;0;G;A;S;0;APK;Target permission to revoke;0;SLICING, TYPE INFERENCE;D;0;M;R;P;M
56;24;WuKong: a scalable and accurate two-phase approach to Android app clone detection;2015;ISSTA;Conference;MALWARE;E;I;1;0;0;A;A;S;1;APK;-;0;DATA MINING, CLASSIFICATION;A;1;L;T;P;A
57;40S;Reevaluating Android Permission Gaps with Static and Dynamic Analysis;2015;GLOBECOM;Conference;PRIVACY;E;Q;1;0;0;A;A;H;0;APK;-;1;FLOW ANALYSIS;D;0;L;R;P;A
58;62S;Andro-autopsy: Anti-malware system based on similarity matching of malware and malware creator-centric information;2015;Digital Investigation;Journal;MALWARE;E;Q;1;0;0;G;A;H;1;APK;-;1;FLOW ANALYSIS, DATA MINING, CLASSIFICATION;A;0;L;R;Y;M
59;81S;EdgeMiner: Automatically Detecting Implicit Control Flow Transitions through the Android Framework;2015;NDSS;Conference;INTER-COMPONENT COMMUNICATION;M;I;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D;0;H;R;Y;A
60;82S;What the app is that? deception and countermeasures in the android user interface;2015;IEEE S&P;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;DATA MINING, FLOW ANALYSIS, SLICING;A;0;H;R;P;A
61;86S;Scalable and Precise Taint Analysis for Android;2015;ISSTA;Conference;MALWARE, PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS;A;0;H;R;Y;M
62;98S;AutoPPG: Towards Automatic Generation of Privacy Policy for Android Applications;2015;SPSM;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;Methods of interest, Platform description;0;FLOW ANALYSIS;D;0;H;R;P;A
63;102S;Information-Flow Analysis of Android Applications in DroidSafe;2015;NDSS;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK, SOURCE CODE;-;0;FLOW ANALYSIS, POINTS-TO ANALYSIS;U;0;M;R;Y;M
64;107S;StaDynA: Addressing the Problem of Dynamic Code Updates in the Security Analysis of Android Applications;2015;CODASPY;Conference;REFLECTION;M;I;1;0;0;A;A;H;0;APK;-;0;DATA MINING;A;1;L;R;Y;A
65;115S;Potential Component Leaks in Android Apps: An Investigation into a New Feature Set for Malware Detection;2015;QRS;Conference;MALWARE, INTER-COMPONENT COMMUNICATION;E, M;Q;1;0;0;A;A;S;1;APK;-;0;TAINT ANALYSIS;A;0;M;R;Y;A
66;10;Static Control-Flow Analysis of User-Driven Callbacks in Android Applications;2015;ICSE;Conference;INTER-COMPONENT COMMUNICATION;M;I;1;0;0;A;A;S;0;SOURCE CODE;-;0;FLOW ANALYSIS;R;0;M;R;P;A
67;11;Composite Constant Propagation: Application to Android Inter-Component Communication Analysis;2015;ICSE;Conference;INTER-COMPONENT COMMUNICATION;M;I;1;0;0;G;A;S;0;APK;-;1;TAINT ANALYSIS;R;0;M;R;P;A
68;12;IccTA: Detecting Inter-Component Privacy Leaks in Android Apps;2015;ICSE;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS;A;0;H;R;P;A
69;2S;EcoDroid: An Approach for Energy-based Ranking of Android Apps;2015;GREENS;Workshop;ENERGY;E;Q;1;0;0;A;A;H;0;APK;-;0;FLOW ANALYSIS, MODEL BASED;D;0;L;R;P;A
70;12S;Supor: Precise and scalable sensitive user input detection for android apps;2015;USENIX Security Symposium;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS;A;0;H;R;P;M
71;13S;Uipicker: User-input privacy identification in mobile applications;2015;USENIX Security Symposium;Conference;PRIVACY;E;Q;1;0;0;G;A;H;1;APK;-;1;TAINT ANALYSIS, DATA MINING, CLASSIFICATION;A;0;H;R;P;A
72;28S;Andro Lyze: A Distributed Framework for Efficient Android App Analysis;2015;IEEE MS;Conference;FRAMEWORK;M;Q;1;0;0;A;A;S;0;APK;User defined analysis;1;FLOW ANALYSIS;A;0;H;R;P;A
73;39S;Using text mining to infer the purpose of permission use in mobile apps;2015;UbiComp;Conference;PRIVACY;E;Q;1;0;0;A;A;S;1;APK;-;0;DATA MINING, CLASSIFICATION;U;0;H;R;P;M
74;42S;Static reference analysis for GUI objects in Android software;2014;CGO;Conference;INTER-COMPONENT COMMUNICATION;M;I;1;0;0;A;A;S;0;SOURCE CODE;-;0;FLOW ANALYSIS;D;0;L;R;N;A
75;43S;Static analysis for independent app developers;2014;ACM SIGPLAN Notices;Journal;TESTING;I;I;1;0;0;G;T;S;0;SOURCE CODE;-;0;ABSTRACT INTERPRETATION;D;0;M;T;N;M
76;52S;Cochecker: Detecting capability and sensitive data leaks from component chains in android;2014;ACISP;Conference;PRIVACY, INTER-COMPONENT COMMUNICATION;E, M;Q;1;0;0;A;A;S;0;SOURCE CODE;Methods of interest;1;TAINT ANALYSIS, ABSTRACT INTERPRETATION;D;0;H;T, R;N;A
77;53S;Android Taint Flow Analysis for App Sets;2014;SOAP;Workshop;INTER-APP COMMUNICATION, INTER-COMPONENT COMMUNICATION, PRIVACY;E, M;Q;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS;D, A;1;L;T;Y;A
78;54S;Amandroid: A precise and general inter-component data flow analysis framework for security vetting of android apps;2014;SIGSAC;Conference;INTER-COMPONENT COMMUNICATION, PRIVACY;E, M;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D;1;M;T, R;P;A
79;55S;AppSealer: Automatic Generation of Vulnerability-Specific Patches for Preventing Component Hijacking Attacks in Android Applications;2014;NDSS;Conference;REFACTORING, PRIVACY;E, I;Q;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS, SLICING;D;0;L;T;P;A
80;67S;Semantics-aware android malware classification using weighted contextual api dependency graphs;2014;SIGSAC;Conference;MALWARE;E;Q;1;0;0;A;A;S;1;APK;-;1;DATA MINING, CLASSIFICATION, MODEL BASED;D, A;0;H;T, R;P;A
81;69S;DREBIN: Effective and Explainable Detection of Android Malware in Your Pocket;2014;NDSS;Conference;MALWARE;E;Q;1;0;0;A;A;S;1;APK;-;0;DATA MINING, CLASSIFICATION;U;0;H;T, R;P;A
82;73S;Retrofitting concurrency for android applications through refactoring;2014;SIGSOFT;Conference;PERFORMANCE, REFACTORING;E, I;Q;1;0;0;A;A;S;0;SOURCE CODE;-;1;FLOW ANALYSIS;D;1;L;R;P;A
83;74S;Checking app behavior against app descriptions;2014;ICSE;Conference;MALWARE;E;Q;1;0;0;G;A;S;1;APK;App Store Descriptions;0;DATA MINING, CLASSIFICATION;A;0;H;R;N;A
84;26;Information Flows As a Permission Mechanism;2014;ASE;Conference;PRIVACY;E;Q;0;1;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;A;1;H;R;Y;A
85;78S;Greendroid: Automated diagnosis of energy inefficiency for smartphone applications;2014;TSE;Journal;ENERGY;E;Q;1;0;0;A;A;H;0;APK;Platform description;1;MODEL BASED;D;0;L;R;P;A
86;84S;FlowDroid: Precise context-,flow-,field-,object-sensitive and lifecycle-aware taint analysis forandroid apps;2014;PLDI;Conference;FRAMEWORK, INTER-COMPONENT COMMUNICATION;M;I;1;0;0;A;A;S;0;APK;Methods of interest;0;TAINT ANALYSIS;D, R;1;H;R;Y;A
87;87S;Cassandra: Towards a Certifying App Store for Android;2014;SPSM;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;Policies, rules & constraints;0;FLOW ANALYSIS;U, A;0;L;T;N;A
88;103S;Code Injection Attacks on HTML5-based Mobile Apps:Characterization, Detection and Mitigation;2014;CCS;Conference;PRIVACY;E;Q;1;0;0;G;G;S;0;SOURCE CODE;-;0;FLOW ANALYSIS;D;0;H;R;Y;A
89;109S;Efficient, context-aware privacy leakage confinement for android applications without firmware modding;2014;ASIA CSS;Conference;PRIVACY;E;Q;1;0;0;A;A;H;0;APK;-;0;FLOW ANALYSIS;A;0;H;R;Y;A
90;111S;Collaborative Verification of Information Flow for a High-Assurance App Store;2014;CCS;Conference;MALWARE;E;Q;1;0;0;G;A;S;0;SOURCE CODE;Policies, rules & constraints;1;FLOW ANALYSIS, TYPE INFERENCE;A;1;L;T;Y;A
91;112S;Multi-App Security Analysis with FUSE: Statically Detecting Android App Collusion;2014;PPREW;Conference;MALWARE, INTER-APP COMMUNICATION;E, M;Q;1;0;0;A;A;S;0;APK;Source code mappings;0;FLOW ANALYSIS, TAINT ANALYSIS, STRING ANALYSIS;A;0;M;R;P;I
92;2;Characterizing and detecting performance bugs for smartphone applications;2014;ICSE;Conference;ENERGY, PERFORMANCE, RESOURCE;E, M;Q;1;0;0;A;A;S;0;APK;-;0;DATA MINING;D;1;L;R;Y;A
93;3;AsDroid: detecting stealthy behaviors in Android applications by user interface and program behavior contradiction;2014;ICSE;Conference;MALWARE;E;Q;1;0;0;A;A;S;1;APK;-;1;FLOW ANALYSIS;A;0;M;R;P;A
94;4;Apposcopy: semantics-based detection of Android malware through static analysis;2014;FSE;Conference;MALWARE;E;Q;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS;A;0;H;R;N;A
95;5;Detecting energy bugs and hotspots in mobile apps;2014;FSE;Conference;ENERGY;E;Q;1;0;0;A;A;H;0;APK;-;1;FLOW ANALYSIS;D;0;L;R;Y;A
96;8;Static Analysis for Extracting Permission Checks of a Large Scale Framework: The Challenges and Solutions for Analyzing Android;2014;TSE;Journal;PRIVACY;E;Q;1;0;0;G;A;S;0;APK;-;0;STRING ANALYSIS;D;0;H;R;Y;A
97;30S;Responsiveness analysis tool for android application;2014;DeMobile;Workshop;PERFORMANCE;E;Q;1;0;0;A;A;S;0;SOURCE CODE;-;0;RESPONSIVENESS ANALYSIS;D;0;L;R;N;A
98;38S;Automatically exploiting potential component leaks in android applications;2014;TrustCom;Conference;PRIVACY, INTER-COMPONENT COMMUNICATION;E, M;Q;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS;A;0;H;R;P;A
99;50S;Effective inter-component communication mapping in android: An essential step towards holistic security analysis;2013;USENIX;Conference;PRIVACY, INTER-APP COMMUNICATION;E, M;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D;1;H;R;P;A
100;66S;DroidAPIMiner: Mining API-level features for robust malware detection in android;2013;SecureComm;Conference;MALWARE;E;Q;1;0;0;A;A;H;1;APK;-;1;DATA MINING, CLASSIFICATION;A;0;H;R;P;A
101;71S;An empirical study of cryptographic misuse in android applications;2013;SIGSAC;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;SLICING, FLOW ANALYSIS;D;0;H;T, R;Y;A
102;77S;Targeted and depth-first exploration for systematic testing of android apps;2013;ACM SIGPLAN Notices;Journal;TESTING;I;Q;1;0;0;A;A;H;0;APK;-;0;TAINT ANALYSIS, FLOW ANALYSIS;D;0;L;R;P;A
103;88S;Sound and precise malware analysis for android via pushdown reachability and entry-point saturation;2013;SPSM;Conference;MALWARE;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;A;0;L;T;P;A
104;91S;AppIntent: analyzing sensitive data transmission in android for privacy leakage detection;2013;CCS;Conference;PRIVACY, INTER-COMPONENT COMMUNICATION;E, M;Q;1;0;0;A;A;H;0;APK;-;0;SYMBOLIC EXECUTION;A;0;M;R;Y;A
105;92S;AppProfiler: a flexible method of exposing privacy-related behavior in android applications to end users;2013;CODASPY;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;1;DATA MINING, CLASSIFICATION;U;0;H;R;Y;A
106;94S;Flow permissions for android;2013;ASE;Conference;PRIVACY, INTER-COMPONENT COMMUNICATION, INTER-APP COMMUNICATION;E, M;Q;1;0;0;A;A;S;0;APK;Source code mappings;0;FLOW ANALYSIS;U;1;M;R;P;A
107;105S;Slicing Droids: Program Slicing for Smali Code;2013;SAC;Conference;MALWARE;E;Q;1;0;0;A;A;S;0;APK;Source code mappings;0;FLOW ANALYSIS, SLICING;A;1;H;R;Y;A
108;108S;A grey-box approach for automated GUI-model generation of mobile applications;2013;FASE;Conference;INTER-COMPONENT COMMUNICATION;M;I;1;0;0;G;A;H;0;SOURCE CODE;-;0;SLICING;D;0;L;T;P;M
109;114S;Structural detection of android malware using embedded call graphs;2013;AISec;Conference;MALWARE;E;Q;1;0;0;A;A;S;1;APK;-;0;DATA MINING, CLASSIFICATION;A;0;H;R;Y;A
110;1;Estimating mobile application energy consumption using program analysis;2013;ICSE;Conference;ENERGY;E;Q;1;0;0;G;A;S;0;APK;Workload Description;1;FLOW ANALYSIS;D;0;L;R;P;A
111;6;Characterizing and detecting resource leaks in Android applications;2013;ASE;Conference;ENERGY, RESOURCE;E, I;Q;1;0;0;A;A;S;0;APK, SOURCE CODE;-;0;FLOW ANALYSIS;D;0;M;T, R;N;A
112;7;Calculating source line level energy information for Android applications;2013;ISSTA;Conference;ENERGY;E;Q;1;0;0;G;A;H;0;APK;Source code mappings;1;CONSTANT PROPAGATION, CODE INSTRUMENTATION;D;0;L;R;Y;A
113;49S;Smartdroid: an automatic system for revealing ui-based trigger conditions in android applications;2012;SPSM;Workshop;MALWARE;E;Q;1;0;0;A;A;H;0;APK;-;0;FLOW ANALYSIS;A;0;L;T;N;A
114;72S;Why Eve and Mallory love Android: An analysis of Android SSL (in) security;2012;CCS;Conference;PRIVACY;E;Q;0;1;0;G;A;S;0;APK;-;0;DATA MINING, CLASSIFICATION;R;0;M;R;N;A
115;79S;User-aware privacy control via extended static-information-flow analysis;2012;ASE;Conference;PRIVACY;E;Q;1;0;0;G;G;S;0;SOURCE CODE;-;0;FLOW ANALYSIS;U;0;M;R;P;M
116;83S;Dr. Android and Mr. Hide: fine-grained permissions in android applications;2012;SPSM;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;STRING ANALYSIS, CONSTANT PROPAGATION;D;0;M;R;Y;M
117;85S;LeakMiner: Detect Information Leakage on Android with Static Taint Analysis;2012;WCSE;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;TAINT ANALYSIS;A;0;H;R;P;A
118;89S;SCANDAL: Static Analyzer for Detecting Privacy Leaks in Android Applications;2012;MOST;Workshop;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;A;0;L;R;P;M
119;93S;A framework for static detection of privacy leaks in android applications;2012;SAC;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;Policies, rules & constraints;1;FLOW ANALYSIS;U;0;L;T;N;A
120;97S;DroidChecker: analyzing android applications for capability leak;2012;WiSec;Conference;PRIVACY, INTER-COMPONENT COMMUNICATION, INTER-APP COMMUNICATION;E, M;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS, TAINT ANALYSIS;D;0;M;R;P;A
121;113S;DroidMat: Android Malware Detection through Manifest and API Calls Tracing;2012;Asia JCIS;Conference;MALWARE;E;Q;1;0;0;A;A;S;1;APK;-;0;DATA MINING, CLASSIFICATION;A;0;M;R;P;A
122;9;Static analysis of Android programs;2012;IST;Journal;TESTING;I;I;1;0;0;A;A;S;0;APK;-;0;CLASS, NULLNESS, TERMINATION ANALYSIS;D;1;L;R;Y;A
123;1S;Estimating Android applications' CPU energy usage via bytecode profiling;2012;GREENS;Workshop;ENERGY;E;Q;1;0;0;A;A;S;0;APK;System profile, Test cases;1;FLOW ANALYSIS;D;0;L;T;P;A
124;3S;What is keeping my phone awake?: characterizing and detecting no-sleep energy bugs in smartphone apps;2012;MOBISYS;Conference;ENERGY;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D;0;L;R;Y;A
125;6S;User-centric dependence analysis for identifying malicious mobile apps;2012;MOST;Workshop;MALWARE;E;Q;1;0;0;A;A;S;0;APK, SOURCE CODE;-;0;FLOW ANALYSIS, MODEL BASED;A;0;L;R;N;A
126;8S;AndroidLeaks: automatically detecting potential privacy leaks in android applications on a large scale;2012;TRUST;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;Source code mappings;1;DATA MINING, TAINT ANALYSIS;A;0;H;R;P;M
127;11S;Hey, You, Get Off of My Market: Detecting Malicious Apps in Official and Alternative Android Markets.;2012;NDSS;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS, CLASSIFICATION;A;0;H;R;P;A
128;22S;RiskRanker: Scalable and Accurate Zero-day Android Malware Detection;2012;MobiSys;Conference;MALWARE;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS, CLASSIFICATION;A;0;H;R;Y;M
129;23S;Chex: statically vetting android apps for component hijacking vulnerabilities;2012;CCS;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;D, A;0;H;R;P;M
130;37S;Automatically securing permission-based software by reducing the attack surface: An application to android;2012;ASE;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS, DATA MINING;A;0;M;R;N;A
131;80S;Android permissions demystified;2011;CCS;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;Source code mappings;0;DATA MINING, FLOW ANALYSIS;A;0;M;R;P;A
132;104S;Using static analysis for automatic assessment and mitigation of unwanted and malicious activities within Android applications;2011;MALWARE;Conference;PRIVACY;E;Q;1;0;0;A;A;S;0;APK;-;0;DATA MINING;A;0;M;R;N;A
133;20S;Analyzing Inter-application Communication in Android;2011;MobiSys;Conference;INTER-APP COMMUNICATION;M;I;1;0;0;A;A;S;0;APK;-;0;FLOW ANALYSIS;A, D, U;0;M;R;P;A
134;21S;PiOS: Detecting Privacy Leaks in iOS Applications;2011;NDSS;Workshop;PRIVACY;E;Q;1;0;0;I;I;S;0;IPA, SOURCE CODE;-;0;FLOW ANALYSIS, SLICING;A;0;H;R;Y;A